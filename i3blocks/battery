#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2015 Nchinda Nchinda <nchinda2@gmail.com>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

my $red;
my $green;
my $blue;
my $bbase;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "$percent%";

if ($status eq 'Discharging') {
	$full_text .= ' DIS';
  } elsif ($status eq 'Charging') {
   $full_text .= ' CHR';
 }

 $short_text = $full_text;

 if ($acpi =~ /(\d\d:\d\d):/) {
   $full_text .= " ($1)";
 }

# print text
print "$full_text\n";
print "$short_text\n";

# consider color and urgent flag only on discharge
if ($status eq 'Discharging') {
	$red=sprintf("%02x", ((100-$percent+($percent)*.3) / 100 * 255));
	$green=sprintf("%02x", (($percent+(100-$percent)*.3) / 100 * 255));
	$bbase=50-abs(50-$percent);
      $blue=sprintf("%02x", ($bbase+(50-$bbase)*.2) / 50 * 255);
      print "#"."$red$green$blue\n";

  if ($percent < 5) {
    exit(33);
  }
}
elsif($status eq 'Unknown') {
  print "#555\n";
}
else {
  print "#00FF00\n";
}

exit(0);
